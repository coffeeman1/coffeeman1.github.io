{"meta":{"title":"굳쌤","subtitle":"좋은 코딩 선생님 굳쌤","description":"본 블로그를 통해서 부수입을 30만원이상 벌어들이는게 우선 목표입니다. 애들 학원비 마련해야 겠다.","author":"굳쌤","url":"http://goodsaem.github.io","root":"/"},"pages":[{"title":"goodsaem","date":"2023-03-08T14:10:33.000Z","updated":"2023-03-13T13:32:15.060Z","comments":true,"path":"about/index.html","permalink":"http://goodsaem.github.io/about/index.html","excerpt":"","text":"goodsaem과 코딩을 ~~ 코딩 하는게 즐겁다. 무언가 알아가고 새로운걸 배우면서 내가 성장할때 보람을 느낀다. 많은 기술블로그로 부터 새로운 기술을 배웠고 나도 누군가에게 무언가 배풀수 있는 사람이 되고자 블로그를 개설했다. 글을 쓰는게 쉽지는 않지만 계속 쓰다보면 좋아지지 않을까 꾸준히 포스팅 하자. 누군가에게 도움이 되는 기술 블로그로 성장하고 하루 1000명이 꾸준히 방문하는 블로그를 만드는게 1차 목표다. 목표를 달성할때 마다 이글을 업데이트 하겠다. 빠른 시일내에 1,000명 달성을 위해 화이팅!!! 2023년3월8일 굳쌤..."}],"posts":[{"title":"mac에 oepnjdk 19.0.1 버전 설치방법","slug":"coding/java/openjdk","date":"2023-03-24T09:40:32.000Z","updated":"2023-03-24T09:54:08.095Z","comments":true,"path":"2023/03/24/coding/java/openjdk/","link":"","permalink":"http://goodsaem.github.io/2023/03/24/coding/java/openjdk/","excerpt":"","text":"mac에 oepnjdk 19.0.1 버전 설치방법mac에서 openjdk 최신 버전 설치하는 방법에 대해서 정리한 내용이다. openjdk 다운로드아래 사이트에서 설치하고자 하는 jdk 파일을 다운로드 한다. https://jdk.java.net/archive/ 압축해제 후 파일이동다운로드 받은 파일의 압축을 풀어준다.압축푼 파일을 &#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines 폴더로 이동한다. 1sudo mv jdk-19* /Library/Java/JavaVirtualMachines 확인터미널에서 아래 명령어를 입력하여 설치된 버전을 확인한다. 1java --version 19.0.1 최신버전의 openjdk가 설치되었다. 123openjdk 19.0.1 2022-10-18OpenJDK Runtime Environment (build 19.0.1+10-21)OpenJDK 64-Bit Server VM (build 19.0.1+10-21, mixed mode, sharing)","categories":[{"name":"코딩","slug":"코딩","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/"},{"name":"java","slug":"코딩/java","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/java/"}],"tags":[{"name":"openjdk","slug":"openjdk","permalink":"http://goodsaem.github.io/tags/openjdk/"}]},{"title":"1. 인텔리제이에서 스프링부트(springboot) 프로젝트 생성","slug":"coding/springboot/springboot101","date":"2023-03-24T04:45:03.000Z","updated":"2023-03-24T13:31:21.272Z","comments":true,"path":"2023/03/24/coding/springboot/springboot101/","link":"","permalink":"http://goodsaem.github.io/2023/03/24/coding/springboot/springboot101/","excerpt":"","text":"개요인텔리제이 springboot 개발환경을 구축하여 backend 프레임워크 구성을 진행 하고자 한다.본 기술블로그에서 vue 관련 내용들을 정리 예정인데 backend framework는 springboot를사용할 예정이다. jpa swagger mybatis 등 실무에서 사용하는 기술들에 대해 정리 예정이다. 인텔리제이 설치먼저 아래 사이트에서 인텔리제이 커뮤니티를 다운로드한다. 참고로 굳쎔은 Ultimate 버전을구매해서 사용중이다. 나중에 vue.js를 코딩을 할때 ultimate 버전을 가지고 있다고 백엔드와프론트 모두 한가지 ide로 할수 있어 여러모로 편리하다. 인텔리제이 다운로드 springboot project 생성spring starter 사이트에서 spring 프로젝트를 생성함.아래와 같이 설정을하고 GENERATE 버튼을 클릭하면 해당 설정되로 압축 파일이 생성 및 다운로드됨.다운로드후 압축 파일 풀어서 적당한 위치에 옮겨 해당 디렉토리를 불러오면 설정완료 구분 설정 비고 Project Gradle Project 선택 Language Java 선택 Spring Boot 3.0.5 선택 Group io.github.goodsaem GroupId는 프로젝트를 식별해 주는 고유값. 각자의 도메인으로 설정함 Artifact api war 나 jar 파일을 만들때 사용되며 버전정보를 제외한 파일이름 Name api Description rest api Package name io.github.goodsaem.api 각자 맞게 설정 Packaging war Java 17 안정버전을 선택 Dependencies Lombok getter 나 setter 등을 자동완성할때 사용 H2 Database H2 db 사용 MariaDB Driver maria db 연결 Spring JPA Java Persistence API 로 객체 지향적으로 데이터를 관리 openjdk 최신버전 설치방법은 아래 링크 참고할것mac에 oepnjdk 19.0.1 버전 설치방법 인텔리제이에서 프로젝트 오픈압축 푼 디렉토리를 인테리제이에서 Open 한다.오픈 후 먼저 프로젝트 SDK 선택및 프로젝트에서 컴파일할 java 버전을 지정한다. 폴더에서 우클릭 하여 아래 그림과 같이 Open Moudule Setttings 메뉴를 클릭한다. SDKS 메뉴를 클릭한다. +아이콘을 클릭한다. open jdk 19 를 선택한다. 프로젝트 메뉴를 선택한다. jdk를 선택한다. 프로젝트 언어 레벨을 17로 맞춘다. 해당 과정이 끝나고 나면 build.gradle 에 정의되어 있는 라이브러리를 자동으로 불러 온다.만약 라이브러리를 제되로 불러오지 않는다면 Gradle 메뉴를 클릭하고 아이콘을클릭하여 필요한 모듈을 다시 불러온다. 마무리여기까지 springboot + 인텔리제이 개발 환경을 셋팅했다. 이제 실제 springboot 를 통한 예제를 하나씩실습해보면서 spring boot를 마스터 해보자.","categories":[{"name":"코딩","slug":"코딩","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/"},{"name":"springboot","slug":"코딩/springboot","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"hexo 에서 fontawesome 사용하기","slug":"blog/fontawesome","date":"2023-03-23T12:40:32.000Z","updated":"2023-03-24T04:29:45.743Z","comments":true,"path":"2023/03/23/blog/fontawesome/","link":"","permalink":"http://goodsaem.github.io/2023/03/23/blog/fontawesome/","excerpt":"","text":"개요Hexo에서 Font Awesome 사용하는 방법은 여러가지가 있다.쉬운 방법은 플러그인을 설치하는 방법이고 두번째는 fontawesome css를 테마에 추가하여 사용하는 방법이다.둘다 정리 해본다. 첫번째 방법 플러그인 설치플러그인을 이용하는 방법이다. 참고한 사이트 fontawesom 플러그인 설치 설치아래 명령어를 입력하여 플러그인을 설치한다. 1npm i hexo-tag-fontawesome --save 사용법아래와 같이 fa 하고 아이콘 이름을 넣고 옵션을 추가하면 된다. 1&#123;% fa [icon-name] [options…] %&#125; 아래는 사용법이다. (코드와 예시) 보다 자세한 사용법은 fontawesome 사이트를 참고할것.fontawesome 스타일링 기본1&#123;% fa user %&#125; 유저 아이콘 출력 유저 아이콘 출력 아이콘 크기1234567&#123;% fa user 2xs %&#125; 유저 아이콘 크기 2xs&#123;% fa user xs %&#125; 유저 아이콘 크기 xs&#123;% fa user sm %&#125; 유저 아이콘 크기 sm&#123;% fa user %&#125; 유저 아이콘 크기 기본&#123;% fa user lg %&#125; 유저 아이콘 크기 lg&#123;% fa user xl %&#125; 유저 아이콘 크기 xl&#123;% fa user 2xl %&#125; 유저 아이콘 크기 2xl 유저 아이콘 크기 2xs 유저 아이콘 크기 xs 유저 아이콘 크기 sm 유저 아이콘 크기 기본 유저 아이콘 크기 lg 유저 아이콘 크기 xl 유저 아이콘 크기 2xl 아이콘 유형12&#123;% fa user solid %&#125; 유저 아이콘 solid&#123;% fa user regular %&#125; 유저 아이콘 regular 유저 아이콘 solid 유저 아이콘 regular 아이콘 회전1234567&#123;% fa coffee %&#125; 무회전&#123;% fa coffee rotate-90 %&#125; 90도 회전&#123;% fa coffee rotate-180 %&#125; 180도 회전&#123;% fa coffee rotate-270 %&#125; 270도 회전&#123;% fa coffee flip-horizontal %&#125; 수평방향 회전&#123;% fa coffee flip-vertical %&#125; 수직방향 회전&#123;% fa coffee flip-both %&#125; 수평수직방향 회전 무회전 90도 회전 180도 회전 270도 회전 수평방향 회전 수직방향 회전 수평수직방향 회전 아이콘 스타일링12345678910111213&lt;span style=&quot;font-size: 3em; color: Tomato;&quot;&gt; &#123;% fa camera %&#125;&lt;/span&gt;&lt;span style=&quot;font-size: 48px; color: Dodgerblue;&quot;&gt; &#123;% fa camera %&#125;&lt;/span&gt;&lt;span style=&quot;font-size: 3rem;&quot;&gt; &lt;span style=&quot;color: Mediumslateblue;&quot;&gt; &#123;% fa camera %&#125; &lt;/span&gt;&lt;/span&gt; 아이콘 애니메이션12&#123;% fa circle-plus beat %&#125;&#123;% fa heart beat %&#125; 두번째 방법 css 직접 설치첫번째 방벙은 아이콘을 간단하게 넣을수 있으나 정교한 style 링이 되지 않았다.두번째 방법을 이용하면 아래와 같이 애니매이션 효과에 추가 속성을 추가할수 있다. 설치사용중인 테마파일의 head.ejs 에 아래와 같은 내용을 입력한다.cdn 경우에는 계속 바뀔수 있으므로 fontawesome cdn 으로 검색 해서 최신버전으로 설치한다. 4번째줄추가link [mark:4]12345678... 중략&lt;%- css(&#x27;css/style&#x27;) %&gt;&lt;%- css(&#x27;https://cdn.jsdelivr.net/font-iropke-batang/1.2/font-iropke-batang.css&#x27;) %&gt;&lt;%- css(&#x27;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css&#x27;) %&gt;&lt;%- js(&#x27;libs/jquery/3.5.0/jquery.min&#x27;) %&gt;&lt;%- partial(&#x27;plugin/scripts&#x27;, &#123; isHead: true &#125;) %&gt;... 중략 사용법아래와 같이 html 태그를 사용하고 class를 지정해주면 사용가능상세내용은 fontawesome 사이트를 참고할것 기본1234567&lt;div&gt;&lt;i class=&quot;fa-solid fa-user&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-regular fa-user&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-sharp fa-solid fa-user&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-sharp fa-regular fa-user&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-brands fa-github-square&quot;&gt;&lt;/i&gt;&lt;/div&gt; 회전123456789&lt;div class=&quot;fa-3x&quot;&gt;&lt;i class=&quot;fa-solid fa-snowboarding&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-solid fa-snowboarding fa-rotate-90&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-solid fa-snowboarding fa-rotate-180&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-solid fa-snowboarding fa-rotate-270&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-solid fa-snowboarding fa-flip-horizontal&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-solid fa-snowboarding fa-flip-vertical&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa-solid fa-snowboarding fa-flip-both&quot;&gt;&lt;/i&gt;&lt;/div&gt; 중첩아래는 Font Awesome 아이콘을 중첩하는 방법에 대해서 정리한 내용이다. 중첩할 두 아이콘의 부모 HTML 요소에 fa-stack 클래스를 추가한다. 첫 번째 아이콘에 fa-stack-1x 클래스를 추가 두 번째 아이콘에 fa-stack-2x 클래스를 추가 선택적으로, 첫 번째 아이콘에 fa-inverse 클래스를 추가하여 두 번째 아이콘과 겹치는 부분을 knock-out(배경과 겹치는 부분을 비워놓는) 효과를 줄수있다. 1234&lt;span class=&quot;fa-stack&quot;&gt; &lt;i class=&quot;fas fa-circle fa-stack-2x&quot;&gt;&lt;/i&gt; &lt;i class=&quot;fas fa-flag fa-stack-1x fa-inverse&quot;&gt;&lt;/i&gt;&lt;/span&gt; 중첩 예제 1234567891011121314151617181920&lt;span class=&quot;fa-stack fa-2x&quot;&gt; &lt;i class=&quot;fa-solid fa-square fa-stack-2x&quot;&gt;&lt;/i&gt; &lt;i class=&quot;fab fa-twitter fa-stack-1x fa-inverse&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;span class=&quot;fa-stack fa-2x&quot;&gt; &lt;i class=&quot;fa-solid fa-circle fa-stack-2x&quot;&gt;&lt;/i&gt; &lt;i class=&quot;fa-solid fa-flag fa-stack-1x fa-inverse&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;span class=&quot;fa-stack fa-2x&quot;&gt; &lt;i class=&quot;fa-solid fa-camera fa-stack-1x&quot;&gt;&lt;/i&gt; &lt;i class=&quot;fa-solid fa-ban fa-stack-2x&quot; style=&quot;color:Tomato&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;span class=&quot;fa-stack fa-2x&quot;&gt; &lt;i class=&quot;fa-solid fa-square fa-stack-2x&quot;&gt;&lt;/i&gt; &lt;i class=&quot;fa-solid fa-terminal fa-stack-1x fa-inverse&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;span class=&quot;fa-stack fa-4x&quot;&gt; &lt;i class=&quot;fa-solid fa-square fa-stack-2x&quot;&gt;&lt;/i&gt; &lt;i class=&quot;fa-solid fa-terminal fa-stack-1x fa-inverse&quot;&gt;&lt;/i&gt;&lt;/span&gt; 마무리이제 hexo에서 아이콘을 사용할수 있다. 2가지 방식다 장단점이 있어 간단하게 사용할때는 첫번째방법을 사용하고 좀더 효과를 주고 싶을때는 두번째 방법을 사용하는걸 추천한다.","categories":[{"name":"블로그","slug":"블로그","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/"},{"name":"hexo","slug":"블로그/hexo","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/hexo/"}],"tags":[{"name":"fontawesome","slug":"fontawesome","permalink":"http://goodsaem.github.io/tags/fontawesome/"}]},{"title":"로또번호 생성기","slug":"app/app1","date":"2023-03-20T03:28:31.000Z","updated":"2023-03-24T04:34:52.560Z","comments":true,"path":"2023/03/20/app/app1/","link":"","permalink":"http://goodsaem.github.io/2023/03/20/app/app1/","excerpt":"","text":"테스트","categories":[{"name":"앱","slug":"앱","permalink":"http://goodsaem.github.io/categories/%EC%95%B1/"}],"tags":[{"name":"app","slug":"app","permalink":"http://goodsaem.github.io/tags/app/"}]},{"title":"실무자가 알려주는 vue.js","slug":"coding/vuejs/vue101","date":"2023-03-16T15:00:03.000Z","updated":"2023-03-24T04:28:20.637Z","comments":true,"path":"2023/03/17/coding/vuejs/vue101/","link":"","permalink":"http://goodsaem.github.io/2023/03/17/coding/vuejs/vue101/","excerpt":"","text":"개요Vue.js는 React.js와 함께 가장 인기있는 자바스크립트 프레임워크 중의 하나이다.w3techs.com의 2023년 3월 16일 기준 시장점유율을 보면 react 대비 아직 많은사이트에서 사용되고 있지는 않지만 트래픽이 높은 사이트에서 활용되고 있음을 알수있다. 1년 넘게 프로젝트를 진행해보면서 느낀건 정말 쉽다는 점이다. 구글 트랜드를 보면 react 가 관심도가 높지만 Vue.js는 React.js 보다 배우기 쉽다는 장점 때문에 지속성장할거라 예상한다. vue.js를 배워두면 react 스벨트 같은것도 쉽게 배울수 있을리라 예상한다. 어떤 내용을 정리할것 인가?vue 문법은 https://ko.vuejs.org/ 기본 문법에 대해서 알수 있으니 반드시 학습 하도록 하자.실무 예제를 접해보면서 필요한 부분에 대해서 설명하는 형태로 진행하고자 한다.아래 내용에 대해서 중점적으로 정리하고 가능하다면 예제 사이트도 만들어서 이해를 높이겠다. vuetify 퀘이사 그리드 에디터 우선 구현hexo 와 vue 개발환경을 합쳐서 보여줄려고 한다. 어떻게 해야 될지 막막하긴한데 정리실무 위주로 설명하는 곳은 많이 없는것 같다.이 마음이 변치 않고 계속 유지 되길 기원하며 글을 마무리 한다.","categories":[{"name":"코딩","slug":"코딩","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/"},{"name":"vue","slug":"코딩/vue","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"http://goodsaem.github.io/tags/vue/"}]},{"title":"애드센스(adsense) 고시를 통과하다.","slug":"blog/daily-life/adsense","date":"2023-03-13T13:55:07.000Z","updated":"2023-03-24T04:34:22.669Z","comments":true,"path":"2023/03/13/blog/daily-life/adsense/","link":"","permalink":"http://goodsaem.github.io/2023/03/13/blog/daily-life/adsense/","excerpt":"","text":"개요몇번의 과정을 거쳐서 드디어 adsense 고시를 통과 했다.이번에 고시통과하면서 느낀점은 애드센스 고시를 통과하기 위한 비법은 “될때까지 하라” 이다.한동안 블로그 활동을 안하다가 글 하나 올려놓고 다시 신청하니 되었다. 계획애드센스 통과기념으로 검색엔진이 검색이 잘되도록 사이트를 개편 할려고 한다.광고도 잘 보이게하고 또한 요즘 가장 핫한 vue 부분에 집중적으로 글을 게시하겠다.그리고 hexo 와 vue 를 동시에 사용해서 정적인 사이트 + vue.js 가 동작하는 사이트를만들어 볼려고 한다. 아직은 구상중인데 생각한되로 되면 blog 카테고리 쪽에 업데이틀진행예정이다. 마무리요즘 자기계발 도서를 많이 읽고 있다. 행운이 나를 이끄는것같은 느낌이다.난 책만 읽고 마음만 바꿨을 뿐인데 운이 따라오는것 같아 기분좋다.계속 이 텐션 유지 하면서 글을 쓰겠다. 블로그 고정팬이 1,000명이 되는 그날까지계속 달리자..","categories":[{"name":"블로그","slug":"블로그","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/"},{"name":"일상","slug":"블로그/일상","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/%EC%9D%BC%EC%83%81/"}],"tags":[{"name":"github","slug":"github","permalink":"http://goodsaem.github.io/tags/github/"}]},{"title":"Github SSH 연결방법","slug":"blog/github-page2","date":"2023-03-03T16:14:47.000Z","updated":"2023-03-24T04:30:23.529Z","comments":true,"path":"2023/03/04/blog/github-page2/","link":"","permalink":"http://goodsaem.github.io/2023/03/04/blog/github-page2/","excerpt":"","text":"개요GitHub 로그인을 ssh 로 설정하면 매번 로그인 할 필요없이 편하게 source 를 commit 하고 push 할수 있습니다.GitHub 에 SSH 설정하는 방법은 아래와 같습니다. Mac 기준으로 정리한 자료 입니다. window 에서도 크게다르지 않습니다. 설정방법SSH 키 생성 후 생성된 키를 클립보드에 복사합니다. 터미널을 오픈한 상태에서 ssh-keygen 명령어를 실행합니다. 기본값설정을 위해 엔터 엔터를 입력합니다.1ssh-keygen -t rsa -b 2048 -f ~/.ssh/coffeeman4.github.io_key 12345678910111213141516171819Generating public/private rsa key pair.Enter passphrase (empty for no passphrase):Enter same passphrase again: Your identification has been saved in /Users/gosu/.ssh/coffeeman4.github.io_keyYour public key has been saved in /Users/gosu/.ssh/coffeeman4.github.io_key.pubThe key fingerprint is:SHA256:wKbrNl+/z1qW+YsdfasdfpK0aONBLu3lSp6yd/jGm6PehoOKqs gosu@gosuui-iMac.localThe key&#x27;s randomart image is:+---[RSA 2048]----+| || . || = || ooo o + . || . . S o || ooo . o = o o || o.o.B + = ||. ooo=*oO.= . ||Eo..o==BO=O=+.. |+----[SHA256]-----+ 아래와 같이 coffeeman4.github.io_key 와 coffeeman4.github.io_key.pub 가 만들어진걸 확인할수 있습니다.123ls -al ~/.ssh-rw------- 1 gosu staff 1831 Mar 5 00:50 coffeeman4.github.io_key-rw-r--r-- 1 gosu staff 404 Mar 5 00:50 coffeeman4.github.io_key.pub 아래 명령어를 입력하고 pub key 값을 클립보드로 복사합니다.1cat ~/.ssh/coffeeman4.github.io_key.pub github 에 ssh 키를 등록합니다. 깃허브에 SSH 공개키 등록을 위해 깃허브 홈페이지에 로그인을 진행하고 아래 순서되로 키를 생성합니다.1 프로젝트를 선택합니다.2 Settings 아이콘을 클릭합니다.3 Deploy Key를 선택하합니다.4 Add deploy key 아이콘을 클릭합니다.5 coffeeman4.github.io_pub 키와 같은형태로 키를 생성합니다. ide 툴로 실습 code 버튼 클릭 Clone에 SSH 클릭 복사 아이콘 클릭 인텔리제이에서 clone File &gt; New &gt; Project from Version Control… 메뉴클릭 클립보드에 복사한 주소를 URL에 쪽에 입력한후 Clone 버튼을 클릭합니다. index.html 파일을 아래와 같이 생성합니다.1234567891011&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;첫번째 글을 등록합니다.새로운 글을 등록합니다.&lt;/body&gt;&lt;/html&gt; 우측 상단의 커밋 아이콘을 클릭합니다. commit 할 파일을 선택합니다. 코멘트를 작성하고 commit and push 버튼을 클릭합니다. push 가 진행됩니다.진행시 별도의 아이디 패스워드를 물어보지 않습니다.즉 ssh 키를 통해 정상적으로 commit &amp; push 가 완료되었습니다. github 프로젝트 소스 확인 6분전에 commit 한 내용을 클릭합니다. 추가한 부분이 github 에 정상 반영되었습니다. github page 접속 확인http://coffeeman4.github.io 오픈하면 추가한 부분이 적용되었음을 알수 있습니다. 정리github 에 매번 로그인하여 소스를 commit&#x2F;push 하는 부분에 대한 개선이 되었고github page 도 정상적으로 반영되었습니다. coffeeman1.github.io 는 hexo라는정적 사이트 생성기로 만들어 졌습니다. 다음번 블로깅 할때는 hexo 사용하는 방법에 대해서정리해 보겠습니다.","categories":[{"name":"블로그","slug":"블로그","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/"},{"name":"hexo","slug":"블로그/hexo","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/hexo/"}],"tags":[{"name":"github","slug":"github","permalink":"http://goodsaem.github.io/tags/github/"}]},{"title":"Github Page 생성방법","slug":"blog/github-page1","date":"2023-03-03T15:30:33.000Z","updated":"2023-03-24T04:30:07.433Z","comments":true,"path":"2023/03/04/blog/github-page1/","link":"","permalink":"http://goodsaem.github.io/2023/03/04/blog/github-page1/","excerpt":"","text":"개요goodsaem.github.io 사이트를 어떻게 만들었는지 기록을 남긴다.GitHub Pages는 GitHub 에서 제공해주는 정적 웹 사이트 서비스다. 이 서비스를 사용하면 개발자는 GitHub 저장소에서 HTML,CSS 및 JavaScript 파일과 같은 정적 파일을업로드하여 웹페이지를 만들수 있다. 가장 큰장점은 무료로 웹사이트를 만들 수 있다는 부분이며, 개발자가손쉽게 git 명령어를 통해 페이지를 등록&#x2F;수정&#x2F;삭제를 할수 있다는 점이다. 아직 github 계정이 없다면 아래링크를 클릭하여 Github 계정 생성부터 진행 한다.Github 계정생성 생성순서계정생성이 다 끝난상태에서 아래 순서되로 github page 생성을 진행한다. 본글에서는 coffeeman4 라는 github 계정을 만들어서 github page 만드는 작업을 진행했다. ‘+’ 아이콘을 클릭하여 New repository 메뉴를 선택 아래 순서대로 repository 생성 진행 Repository name 에 계정이름과 동일한 아래 그림에서는 계정이 coffeeman4 이므로 ‘coffeeman4.github.io’ 입력 Add a README file 에 체크 Create repository 버튼을 클릭하여 repository 생성 정리여기까지 진행하면 아래와 같은 내용을 확인할수 있다. 아직 coffeman4.github.io로 접속하면404 에러가 발생하는데 아래 링크를 통해 hexo로 블로그 만드는 방법에 대해서 확인해 보자. Github 계정생성","categories":[{"name":"블로그","slug":"블로그","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/"},{"name":"hexo","slug":"블로그/hexo","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/hexo/"}],"tags":[{"name":"github","slug":"github","permalink":"http://goodsaem.github.io/tags/github/"}]},{"title":"Github 계정생성","slug":"blog/github-regist","date":"2023-03-02T13:58:47.000Z","updated":"2023-03-24T04:30:32.193Z","comments":true,"path":"2023/03/02/blog/github-regist/","link":"","permalink":"http://goodsaem.github.io/2023/03/02/blog/github-regist/","excerpt":"","text":"개요ㅇㅇ 2023년 3월 4일 기준 github 계정 생성하는 방법에 대해서 정리한 내용입니다. 진행순서진행 순서는 아래와 같습니다. https://github.com/ 사이트에 접속합니다. Sign up 아이콘을 클릭합니다. 이메일 주소 패스워드 이름을 메일 수신여부 y 입력하고 Continue 버튼을 클릭합니다. 같은 그림 2개가 들어가 있는 이미지를 선택합니다. 그림인증이 끝나고 나면 아래와 같은 화면이 나오고 Create account 버튼을 클릭하여 다음단계를 진행합니다. 등록한 이메일로 아래와 같은 인증 코드 복사한후 Enter Code 부분에 인증코드를 붙여넣기 합니다. 여기까지 진행하면 계정생성이 완료됩니다. 계정을 생성할때 음성으로 질문하는 경우도 있습니다. 음성에서 사람소리가 들리는데 몇번 말했는지 숫자를 적어주면 다음단계로 진행할수 있습니다.","categories":[{"name":"블로그","slug":"블로그","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/"},{"name":"hexo","slug":"블로그/hexo","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/hexo/"}],"tags":[{"name":"github","slug":"github","permalink":"http://goodsaem.github.io/tags/github/"}]},{"title":"무료로 hexo 블로그 만들기","slug":"blog/hexo","date":"2023-03-01T14:11:03.000Z","updated":"2023-03-24T04:30:41.918Z","comments":true,"path":"2023/03/01/blog/hexo/","link":"","permalink":"http://goodsaem.github.io/2023/03/01/blog/hexo/","excerpt":"","text":"개요정적 웹사이트 생성기 hexo를 이용해서 블로그를 만든후 github page까지 반영하는 방법에 대해서 알아보자.커피맨 블로그를 만들면서 작업했던 내용들을 정리했고. 차근차근 따라서 진행하면 coffeeman1.github.io와같은 멋진 블로그를 무료를 만들수 있다. 사전준비사항준비사항은 아래와 같으며 본 블로그에 1,2,3 단계에 대해서 모두 정리해 두었으니 링크를 통해 사전준비를 끝내자. github 계정 github page 생성 github ssh 연결 hexo 설치아래 명령어를 입력하여 전역으로 hexo-cli 설치 1npm install hexo-cli -g 아래 명령어를 입력하여 hexo blog를 생성한다. 1hexo init blog 아래 명령어를 입력하여 hexo server 실행 123cd blognpm installhexo server http://localhost:4000/ 접속해서 아래와 같은 화면이 나오면 설치 완료 hexo 테마 적용하기https://hexo.io/themes/ 에서 hexo 다양한 테마를 다운로드 받을수 있다.본 블로그에서 사용하는 theme은 https://github.com/ppoffice/hexo-theme-hueman 은 이용했고 23년 3월10일 현재가장 최근 버전은 2020년 6월 21일 릴리즈된 0.5.0 버전이다. 설치설치는 https://github.com/ppoffice/hexo-theme-hueman/wiki/Installation 문서를 보고 참고함 먼저 프로젝트를 blog 폴더 아래에 themes&#x2F;hueman 로 복제함 12cd bloggit clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman 실행결과 1234567Cloning into &#x27;themes/hueman&#x27;...remote: Enumerating objects: 2277, done.remote: Counting objects: 100% (16/16), done.remote: Compressing objects: 100% (14/14), done.remote: Total 2277 (delta 3), reused 11 (delta 2), pack-reused 2261Receiving objects: 100% (2277/2277), 5.77 MiB | 6.42 MiB/s, done.Resolving deltas: 100% (1218/1218), done. blog 폴더의 _confi.yml파일에서 theme을 파일을 열어서 아래와 같이 설치한 theme명으로 수정한다 theme: landscape 123456... 중략 ...# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: hueman... 중략 ... themes\\hueman 디렉토리로 이동한후 _config.yml.example 파일일 _config.yml로 수정한다. 12cd cd themes/huemanmv _config.yml.example _config.yml 실행상위 디렉토리로 이동한후 hexo 서버를 구동시킨다. 123cd ..cd ..hexo server 실행결과 123INFO Validating configINFO Start processingINFO Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop. 웹브라우저에서 url http://localhost:4000/ 를 입력하고 아래와 같은 그림이 나오면 성공 hexo 환경설정블로그 환경설정을 위해 blog&#x2F;_config.xml 파일을 아래와 같이 수정함. 사이트및 url 정보123456789101112# Sitetitle: 커피맨4subtitle: 커피맨4번째 블로그 입니다.description: 블로그 테스트를 위해서 환경설정한 내용입니다.keywords:author: coffeemanlanguage: kotimezone: asia/seoul# URL## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;url: http://coffeeman4.github.io github 에 배포를 위한 deploy 정보123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: git@github.com:coffeeman4/coffeeman4.github.io.git branch: main 배포하기준비물배포를 위해 hexo-deployer-git 플러그인을 설치한다. 설치명령어는 아래와 같다. 1npm install hexo-deployer-git --save 배포순서배포는 먼저 정적인 페이지(html)를 만들고 github page 쪽으로 deploy 하는 형태로 진행한다. 정적 페이지 만들기먼저 배포될 디렉토릴 파일을 깨끗히 정리한다. 1hexo clean 실행결과 123INFO Validating configINFO Deleted database.INFO Deleted public folder. 아래 명령어를 입력하여 정적 페이지를 생성한다. 1hexo generate 정상적으로 실행되면 아래와 같이 public 디렉토리에 블로그 구성을 필요한 파일들이 생성됨을 확인할수 있다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384INFO Validating configINFO Start processingINFO Files loaded in 110 msINFO Generated: archives/2023/index.htmlINFO Generated: archives/index.htmlINFO Generated: index.htmlINFO Generated: css/fonts/fontawesome-webfont.woff2INFO Generated: js/script.jsINFO Generated: fancybox/jquery.fancybox.min.cssINFO Generated: archives/2023/03/index.htmlINFO Generated: libs/justified-gallery/justifiedGallery.min.cssINFO Generated: libs/font-awesome/css/font-awesome.cssINFO Generated: css/images/logo-header.pngINFO Generated: css/fonts/fontawesome-webfont.woffINFO Generated: libs/font-awesome/fonts/fontawesome-webfont.ttfINFO Generated: libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2INFO Generated: libs/source-code-pro/styles.cssINFO Generated: js/main.jsINFO Generated: libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2INFO Generated: js/insight.jsINFO Generated: libs/titillium-web/styles.cssINFO Generated: fancybox/jquery.fancybox.min.jsINFO Generated: css/style.cssINFO Generated: libs/justified-gallery/jquery.justifiedGallery.min.jsINFO Generated: css/fonts/fontawesome-webfont.eotINFO Generated: libs/font-awesome/css/font-awesome.min.cssINFO Generated: js/jquery-3.4.1.min.jsINFO Generated: css/fonts/FontAwesome.otfINFO Generated: css/fonts/fontawesome-webfont.ttfINFO Generated: css/images/opacity-10.pngINFO Generated: css/images/s-left.pngINFO Generated: css/images/thumb-default-small.pngINFO Generated: libs/font-awesome/fonts/FontAwesome.otfINFO Generated: css/images/thumb-default.pngINFO Generated: libs/jquery/3.5.0/jquery.min.jsINFO Generated: libs/lightgallery/fonts/lg.svgINFO Generated: css/images/banner.jpgINFO Generated: libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2INFO Generated: libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2INFO Generated: libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2INFO Generated: libs/font-awesome/fonts/fontawesome-webfont.woffINFO Generated: libs/font-awesome/fonts/fontawesome-webfont.eotINFO Generated: 2023/03/09/hello-world/index.htmlINFO Generated: libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2INFO Generated: libs/lightgallery/css/lg-fb-comment-box.cssINFO Generated: libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2INFO Generated: libs/lightgallery/js/lg-autoplay.jsINFO Generated: libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2INFO Generated: libs/font-awesome/fonts/fontawesome-webfont.woff2INFO Generated: libs/lightgallery/img/loading.gifINFO Generated: libs/lightgallery/css/lg-fb-comment-box.min.cssINFO Generated: libs/lightgallery/js/lg-fullscreen.min.jsINFO Generated: libs/lightgallery/js/lg-pager.jsINFO Generated: libs/lightgallery/js/lg-video.min.jsINFO Generated: libs/lightgallery/js/lg-share.jsINFO Generated: libs/lightgallery/js/lg-pager.min.jsINFO Generated: libs/lightgallery/js/lg-share.min.jsINFO Generated: libs/lightgallery/js/lg-hash.jsINFO Generated: libs/lightgallery/js/lg-thumbnail.min.jsINFO Generated: libs/lightgallery/js/lg-fullscreen.jsINFO Generated: libs/lightgallery/js/lg-autoplay.min.jsINFO Generated: libs/lightgallery/js/lg-video.jsINFO Generated: libs/lightgallery/css/lightgallery.cssINFO Generated: libs/lightgallery/js/lg-thumbnail.jsINFO Generated: libs/lightgallery/js/lightgallery.jsINFO Generated: libs/lightgallery/css/lightgallery.min.cssINFO Generated: libs/lightgallery/js/lightgallery.min.jsINFO Generated: libs/font-awesome/fonts/fontawesome-webfont.svgINFO Generated: libs/lightgallery/js/lg-zoom.min.jsINFO Generated: libs/lightgallery/js/lg-zoom.jsINFO Generated: libs/lightgallery/fonts/lg.ttfINFO Generated: libs/lightgallery/css/lg-transitions.cssINFO Generated: libs/lightgallery/js/lg-hash.min.jsINFO Generated: libs/lightgallery/fonts/lg.woffINFO Generated: libs/lightgallery/img/youtube-play.pngINFO Generated: libs/lightgallery/img/vimeo-play.pngINFO Generated: libs/lightgallery/css/lg-transitions.css.mapINFO Generated: libs/lightgallery/fonts/lg.eotINFO Generated: libs/lightgallery/css/lg-fb-comment-box.css.mapINFO Generated: libs/lightgallery/css/lightgallery.css.mapINFO Generated: libs/lightgallery/img/video-play.pngINFO Generated: libs/lightgallery/css/lg-transitions.min.cssINFO Generated: css/fonts/fontawesome-webfont.svgINFO 80 files generated in 314 ms 배포하기아래 명령어를 입력하여 github page 에 배포한다. 1hexo deploy 실행결과 1234567891011121314151617181920212223242526272829INFO Validating configINFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...[main 1ca47fb] Site updated: 2023-03-10 23:41:16 12 files changed, 1 insertion(+), 2826 deletions(-) delete mode 100644 css/fonts/FontAwesome.otf delete mode 100644 css/fonts/fontawesome-webfont.eot delete mode 100644 css/fonts/fontawesome-webfont.svg delete mode 100644 css/fonts/fontawesome-webfont.ttf delete mode 100644 css/fonts/fontawesome-webfont.woff delete mode 100644 css/fonts/fontawesome-webfont.woff2 delete mode 100644 css/images/banner.jpg delete mode 100644 fancybox/jquery.fancybox.min.css delete mode 100644 fancybox/jquery.fancybox.min.js delete mode 100644 js/jquery-3.4.1.min.js delete mode 100644 js/script.jsEnumerating objects: 19, done.Counting objects: 100% (19/19), done.Delta compression using up to 6 threadsCompressing objects: 100% (6/6), done.Writing objects: 100% (10/10), 831 bytes | 831.00 KiB/s, done.Total 10 (delta 2), reused 0 (delta 0), pack-reused 0remote: Resolving deltas: 100% (2/2), completed with 2 local objects.To github.com:coffeeman4/coffeeman4.github.io.git a0701c1..1ca47fb HEAD -&gt; mainbranch &#x27;main&#x27; set up to track &#x27;git@github.com:coffeeman4/coffeeman4.github.io.git/main&#x27;.INFO Deploy done: git Github page 확인하기여기까지 진행했다면 https://coffeeman4.github.io/ 사이트에 접속하면 아래와 같은 화면을 확인할수 있다. 정리좀더 좋은 컨텐츠를 만들기 노력하는 커피맨이 되자~커피를 보충해준다면 더 노력해서 좋은글을 쓸수 있을것 같다.강요는 아니고~~ 글이 유익했다면 커피한잔 ok ? st=>start: 시작 e=>end: 종료 op1=>operation: 정적인 페이지만들기 op2=>operation: 배포하기 st(right)->op1(right)->op2(right)->e(right){\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);","categories":[{"name":"블로그","slug":"블로그","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/"},{"name":"hexo","slug":"블로그/hexo","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/hexo/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://goodsaem.github.io/tags/blog/"}]}],"categories":[{"name":"코딩","slug":"코딩","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/"},{"name":"java","slug":"코딩/java","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/java/"},{"name":"springboot","slug":"코딩/springboot","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/springboot/"},{"name":"블로그","slug":"블로그","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/"},{"name":"hexo","slug":"블로그/hexo","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/hexo/"},{"name":"앱","slug":"앱","permalink":"http://goodsaem.github.io/categories/%EC%95%B1/"},{"name":"vue","slug":"코딩/vue","permalink":"http://goodsaem.github.io/categories/%EC%BD%94%EB%94%A9/vue/"},{"name":"일상","slug":"블로그/일상","permalink":"http://goodsaem.github.io/categories/%EB%B8%94%EB%A1%9C%EA%B7%B8/%EC%9D%BC%EC%83%81/"}],"tags":[{"name":"openjdk","slug":"openjdk","permalink":"http://goodsaem.github.io/tags/openjdk/"},{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"},{"name":"fontawesome","slug":"fontawesome","permalink":"http://goodsaem.github.io/tags/fontawesome/"},{"name":"app","slug":"app","permalink":"http://goodsaem.github.io/tags/app/"},{"name":"vue","slug":"vue","permalink":"http://goodsaem.github.io/tags/vue/"},{"name":"github","slug":"github","permalink":"http://goodsaem.github.io/tags/github/"},{"name":"blog","slug":"blog","permalink":"http://goodsaem.github.io/tags/blog/"}]}